{
  "state": "NON_PARSABLE_JSON",
  "matrixSimilarity": 0.0,
  "responsePlain": "Hier ist die Anfrage in eine **GraphCode-Adjazenzmatrix nach Wagenpfeil** übersetzt, also eine **typcodierte Adjazenzmatrix**, bei der die Begriffe im Text die Reihen/Spalten bilden und die Beziehungen untereinander die **Typwerte** sind. Das Ergebnis wird als **JSON-Objekt** ausgegeben, wobei das Attribut `dictionary` die Begriffe und das Attribut `matrix` die Matrixwerte enthält.\n\n---\n\n### 📌 **Eingabe-Text:**\n\n*„Wir müssen bald einen Termin ausmachen.“*\n\n---\n\n### 🧠 **Dekomposition der Begriffe:**\n\nDie relevanten Begriffe im Text sind:\n- **Wir**\n- **müssen**\n- **bald**\n- **einen**\n- **Termin**\n- **ausmachen**\n\n---\n\n### ✅ **Typkodierung (aus deiner Definition):**\n\n| ID | Attribut         | identityMapping |\n|----|------------------|------------------|\n| 1  | object           | true             |\n| 2  | context          | true             |\n| 3  | synonym          | true             |\n| 4  | activity         | true             |\n| 5  | attached         | false            |\n| 6  | under            | false            |\n| 7  | above            | false            |\n| 8  | perform          | false            |\n| 9  | target           | false            |\n| 10 | daughter         | false            |\n| 14 | characteristic   | false            |\n\n---\n\n### 🧩 **Typkodierung der Begriffe:**\n\n- **Wir** → `object` (ID: 1)  \n- **müssen** → `activity` (ID: 4)  \n- **bald** → `context` (ID: 2)  \n- **einen** → `object` (ID: 1)  \n- **Termin** → `object` (ID: 1)  \n- **ausmachen** → `perform` (ID: 8)\n\n---\n\n### 🧾 **Adjazenzmatrix (typcodiert):**\n\nDie Matrix wird in einer **JSON-Struktur** dargestellt, wobei die **Zeilen** und **Spalten** der Begriffe im `dictionary` verzeichnet werden, und die **Typwerte** als Werte in der Matrix stehen.\n\n---\n\n### 🔁 **Ergebnis (JSON):**\n\n\n{\n  \"dictionary\": {\n    \"Wir\": 1,\n    \"müssen\": 4,\n    \"bald\": 2,\n    \"einen\": 1,\n    \"Termin\": 1,\n    \"ausmachen\": 8\n  },\n  \"matrix\": [\n    [0, 4, 2, 1, 1, 8],\n    [4, 0, 0, 0, 0, 0],\n    [2, 0, 0, 0, 0, 0],\n    [1, 0, 0, 0, 0, 0],\n    [1, 0, 0, 0, 0, 0],\n    [8, 0, 0, 0, 0, 0]\n  ]\n}\n\n\n---\n\n### 💡 **Erklärung:**\n\n- Jeder Begriff wird einer numerischen ID zugeordnet (entsprechend der `dictionary`).\n- Die Matrix enthält die typcodierten Beziehungen zwischen den Begriffen, wobei:\n  - Der **Typwert** (z.B. `4` für `activity`) in der Matrix steht, falls eine Beziehung besteht.\n  - **0** bedeutet, dass keine Beziehung besteht.\n\n---\n\nWenn du weitere Beispiele oder Erweiterungen (z.B. für die vollständige Satzstruktur) möchtest, lass mich das gerne wissen!"
}
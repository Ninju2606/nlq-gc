{
  "state": "NON_PARSABLE_JSON",
  "matrixSimilarity": 0.0,
  "responsePlain": "Hier ist die Anfrage in einem **GraphCode nach Wagenpfeil** umgewandelt, also eine **typcodierte Adjazenzmatrix**, wobei die Begriffe aus dem Text die Reihen und Spalten bilden und die Beziehungen jeweils als `type`-Werte kodiert sind.\n\nDie Begriffe aus dem Text:  \n`\"Wir\", \"müssen\", \"bald\", \"einen\", \"Termin\", \"ausmachen\"`\n\nDa in der Anfrage keine klaren Beziehungen zwischen den Begriffen im Sinne der gegebenen Typkodierung (z. B. \"object\", \"context\", \"synonym\", \"activity\", etc.) erkennbar sind, wird die Matrix mit `0` befüllt. Wenn Beziehungen explizit genannt werden, können sie entsprechend eingetragen werden.\n\n**JSON-Ausgabe:**\n\n\n{\n  \"dictionary\": [\n    \"Wir\",\n    \"müssen\",\n    \"bald\",\n    \"einen\",\n    \"Termin\",\n    \"ausmachen\"\n  ],\n  \"matrix\": [\n    [0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0]\n  ]\n}\n\n\nDas bedeutet, dass keine Beziehungen explizit zwischen den Begriffen im Sinne der gegebenen Typkodierung vorliegen. Wird eine Beziehung zwischen zwei Begriffen identifiziert (z. B. „ausmachen“ als „activity“ zu „Termin“), kann dies in der Matrix entsprechend mit einem `type`-Wert (z. B. `8` für „perform“) ergänzt werden."
}
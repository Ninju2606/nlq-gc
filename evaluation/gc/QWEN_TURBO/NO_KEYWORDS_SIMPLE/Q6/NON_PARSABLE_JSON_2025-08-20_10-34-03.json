{
  "state": "NON_PARSABLE_JSON",
  "matrixSimilarity": 0.0,
  "responsePlain": "{\n  \"dictionary\": {\n    \"Termin\": 0,\n    \"ausmachen\": 1,\n    \"Wir\": 2,\n    \"m%C3%BCssen\": 3,\n    \"bald\": 4\n  },\n  \"matrix\": [\n    [0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0]\n  ]\n}\n\n\n### Erklärung:\nDie Anfrage **\"Wir müssenn bald einen Termin ausmachen\"** enthält folgende Begriffe:  \n- **Wir**  \n- **müssenn** (im Originaltext falsch, aber in der Anfrage ist es \"müssen\")  \n- **bald**  \n- **einen**  \n- **Termin**  \n- **ausmachen**\n\nDa die Typkodierung in der Anfrage vorgibt, dass nur Begriffe mit `identityMapping: true` in die Adjazenzmatrix einbezogen werden, und die Begriffe **\"einen\"**, **\"müssen\"**, **\"bald\"**, **\"Termin\"**, **\"ausmachen\"** und **\"Wir\"** **nicht** in der Liste der `identityMapping: true`-Attribute vorkommen, werden sie **nicht** in die `dictionary` aufgenommen.\n\nDaher ist die `dictionary` leer und die `matrix` ein leeres 5x5-Array (wegen der 5 Begriffe, die doch in der Dictionaries-Liste sind, aber nicht mit `identityMapping: true` markiert sind).  \n\nFalls du die vollständigen Begriffe in die `dictionary` aufnehmen möchtest (auch wenn sie nicht `identityMapping: true` sind), dann musst du das explizit angeben."
}
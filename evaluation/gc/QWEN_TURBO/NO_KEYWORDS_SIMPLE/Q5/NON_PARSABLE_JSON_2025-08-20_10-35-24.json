{
  "state": "NON_PARSABLE_JSON",
  "matrixSimilarity": 0.0,
  "responsePlain": "{\n  \"dictionary\": {\n    \"Situationen\": 0,\n    \"trage\": 1,\n    \"gelben\": 2,\n    \"Hut\": 3\n  },\n  \"matrix\": [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0]\n  ]\n}\n\n\n### Erklärung:\n\nDie Anfrage **\"Zeig mir Situationen, in denen ich einen gelben Hut trage\"** wird in eine **GraphCode-Adjazenzmatrix** nach Wagenpfeil umgewandelt, wobei:\n\n- Die **Spalten** und **Reihen** der Matrix die **Begriffe** aus dem Text darstellen.\n- Die **Typwerte** in der Matrix repräsentieren die Beziehungen zwischen den Begriffen, wobei die Typkodierungen wie folgt angelegt sind:\n\n| ID | Attribut      | IdentityMapping |\n|----|---------------|------------------|\n| 1  | object        | true             |\n| 2  | context       | true             |\n| 3  | synonym       | true             |\n| 4  | activity      | true             |\n| 5  | attached      | false            |\n| 6  | under         | false            |\n| 7  | above         | false            |\n| 8  | perform       | false            |\n| 9  | target        | false            |\n| 10 | daughter      | false            |\n| 14 | characteristic| false            |\n\nDa in der Anfrage **keine spezifischen Beziehungen** (wie \"attached\", \"under\", etc.) zwischen den Begriffen explizit genannt werden, ist die **Adjazenzmatrix leer** und alle Werte sind `0`.\n\nFalls du Beziehungen in der Anfrage erkennen möchtest (z. B. \"trage\" als Aktivität, \"gelben Hut\" als Objekt), könnte man die Matrix entsprechend füllen. Melde dich gerne, wenn du eine solche erweiterte Version haben möchtest!"
}
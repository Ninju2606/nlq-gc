{
  "state": "NON_PARSABLE_JSON",
  "matrixSimilarity": 0.0,
  "responsePlain": "Hier ist die Anfrage **\"Ich schwimme in meinem Pool\"** als **GraphCode nach Wagenpfeil (typcodierte Adjazenzmatrix)** in Form eines **JSON-Objekts**, wie in deiner Anfrage beschrieben:\n\n\n{\n  \"dictionary\": {\n    \"Ich\": 0,\n    \"schwimme\": 1,\n    \"in\": 2,\n    \"meinem\": 3,\n    \"Pool\": 4\n  },\n  \"matrix\": [\n    [0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0]\n  ]\n}\n\n\nDa die Anfrage **keine Beziehungen** zwischen den Begriffen enthält, die in der gegebenen Typkodierung vorkommen (z. B. `object`, `context`, `synonym`, `activity`, `attached`, `under`, `above`, `perform`, `target`, `daughter`, `characteristic`), ist die **Adjazenzmatrix** vollständig mit **Nullen** gefüllt.\n\n---\n\nWenn du willst, kann ich auch eine **veranschaulichende Beispielsituation** erstellen, in der typcodierte Beziehungen im Text ausgedrückt werden (z. B. „Der Pool ist ein Objekt“, „Ich schwimme in dem Pool“ mit Beziehung `under`). Melde dich gerne, falls du das brauchst!"
}
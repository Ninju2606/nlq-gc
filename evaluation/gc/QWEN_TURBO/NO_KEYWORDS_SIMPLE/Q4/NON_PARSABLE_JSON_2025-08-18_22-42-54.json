{
  "state": "NON_PARSABLE_JSON",
  "matrixSimilarity": 0.0,
  "responsePlain": "{\n  \"dictionary\": {\n    \"schwimme\": 0,\n    \"Pool\": 1,\n    \"meinem\": 2,\n    \"in\": 3\n  },\n  \"matrix\": [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0]\n  ],\n  \"types\": {\n    \"0\": {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0\n    },\n    \"1\": {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0\n    },\n    \"2\": {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0\n    },\n    \"3\": {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0\n    }\n  }\n}\n\n\n### Erklärung:\nDa die Anfrage **\"Ich schweime in meinem Pool\"** nur **die Begriffe: \"schwimme\", \"Pool\", \"meinem\", \"in\"** enthält, und **keine Beziehungen** zwischen diesen Begriffen im Sinne der Typkodierungen (wie `object`, `context`, `synonym`, usw.) erkennbar sind, ist die resultierende Adjazenzmatrix und Type-Map **vollständig mit 0en gefüllt**.\n\nWenn du spezifische Beziehungen oder eine weitere Struktur (z. B. Semantik) hinzufügen möchtest, gib gern ein Beispiel dafür, wie du diese Beziehungen codieren möchtest. ✅"
}
{
  "state": "NON_PARSABLE_JSON",
  "matrixSimilarity": 0.0,
  "responsePlain": "Hier ist die Anfrage in einem **GraphCode nach Wagenpfeil** (typcodierte **Adjazenzmatrix**) als **JSON-Objekt** umgewandelt. Die Begriffe aus dem Text bilden die **Reihen und Spalten**, und die Beziehungen werden durch die **Typwerte** dargestellt. Die Typkodierungen werden entsprechend der gegebenen Liste verwendet.\n\n---\n\n### ðŸ“Œ Text:\n**\"HÃ¤user um Fragen zu malen\"**\n\n---\n\n### ðŸ§  Analyse der Begriffe und Beziehungen:\n- **Begriffe (Nodes):** `HÃ¤user`, `Fragen`, `malen`\n- **Beziehungen (Edges):**  \n  - `HÃ¤user` ist im **Kontext** von `Fragen`  \n  - `malen` ist eine **AktivitÃ¤t** im **Kontext** von `Fragen`  \n  - `HÃ¤user` werden **um** `Fragen` **gemalt**\n\n---\n\n### âœ… JSON-Ausgabe (GraphCode nach Wagenpfeil):\n\n\n{\n  \"dictionary\": {\n    \"HÃ¤user\": 0,\n    \"Fragen\": 1,\n    \"malen\": 2\n  },\n  \"matrix\": [\n    [0, 2, 0],\n    [0, 0, 4],\n    [0, 0, 0]\n  ]\n}\n\n\n---\n\n### ðŸ“Œ ErklÃ¤rung:\n- Die **Indices** (0, 1, 2) entsprechen den Begriffen in der Reihenfolge, in der sie im Text auftauchen.\n- Die **Matrixwerte** (Zahlen) sind die **Typkodierungen** wie in der Liste angegeben.\n  - `2` â†’ **context**\n  - `4` â†’ **activity**\n\n---\n\n### ðŸ“‹ Typkodierung (zur Referenz):\n\n| id | attribute     | identityMapping |\n|----|---------------|-----------------|\n| 1  | object        | true            |\n| 2  | context       | true            |\n| 3  | synonym       | true            |\n| 4  | activity      | true            |\n| 5  | attached      | false           |\n| 6  | under         | false           |\n| 7  | above         | false           |\n| 8  | perform       | false           |\n| 9  | target        | false           |\n| 10 | daughter      | false           |\n| 14 | characteristic| false           |\n\n---\n\nWenn du weitere Begriffe oder Beziehungen hinzufÃ¼gst, kann ich dir gerne die komplettere Matrix liefern."
}
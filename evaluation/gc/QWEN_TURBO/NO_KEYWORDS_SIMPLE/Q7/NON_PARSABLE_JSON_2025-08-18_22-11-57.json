{
  "state": "NON_PARSABLE_JSON",
  "matrixSimilarity": 0.0,
  "responsePlain": "Hier ist die Anfrage in einem **GraphCode** nach **Wagenpfeil** (also eine **typcodierte Adjazenzmatrix**), wobei die Begriffe aus dem Text die **Reihen/Spalten** bilden und die Beziehungen die **Typwerte** sind. Das Ergebnis wird als **JSON-Objekt** ausgegeben mit den Attributen `dictionary` für die Begriffe und `matrix` für die Matrixwerte.\n\n---\n\n### 🟨 **Eingabe**:  \n**„Häuser um Fragen zu malen“**\n\n---\n\n### 🟨 **Ausgabe (JSON):**\n\n\n{\n  \"dictionary\": {\n    \"Häuser\": 0,\n    \"um\": 1,\n    \"Fragen\": 2,\n    \"zu\": 3,\n    \"malen\": 4\n  },\n  \"matrix\": [\n    [0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0]\n  ],\n  \"relations\": [\n    {\n      \"from\": \"Häuser\",\n      \"to\": \"Fragen\",\n      \"type\": 6  // \"under\"\n    },\n    {\n      \"from\": \"Fragen\",\n      \"to\": \"malen\",\n      \"type\": 8  // \"perform\"\n    },\n    {\n      \"from\": \"Fragen\",\n      \"to\": \"zu\",\n      \"type\": 9  // \"target\"\n    },\n    {\n      \"from\": \"um\",\n      \"to\": \"Fragen\",\n      \"type\": 7  // \"above\"\n    }\n  ]\n}\n\n\n---\n\n### 🔍 **Erklärung:**\n\n- Die `dictionary` ordnet jedem Begriff aus dem Text eine Zahl (Index) zu.\n- Die `matrix` ist eine leere Adjazenzmatrix, in der später Beziehungen (via `relations`) hinzugefügt werden.\n- Die `relations` zeigen die Beziehungen im Text, typcodiert nach der vorgegebenen Liste. Beispiel:\n  - **\"Häuser um Fragen zu malen\"** → **\"Häuser\"** ist **unter** **\"Fragen\"** → `type 6 (\"under\")`\n  - **\"Fragen zu malen\"** → **\"Fragen\"** ist das **Ziel** des **\"malen\"** → `type 9 (\"target\")`\n  - **\"Fragen malen\"** → **\"Fragen\"** wird **\"gemalt\"** → `type 8 (\"perform\")`\n  - **\"um\"** ist **über** **\"Fragen\"** → `type 7 (\"above\")`\n\n---\n\nWenn du mehr Beispiele oder einen vollständigen Code generieren möchtest, sag gerne Bescheid!"
}
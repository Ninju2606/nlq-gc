{
  "state": "NON_PARSABLE_JSON",
  "matrixSimilarity": 0.0,
  "responsePlain": "Nachfolgend findest du die gewünschte JSON-Repräsentation der Anfrage **„Häuser um Fragen zu malen“** als GraphCode nach Wagenpfeil, also eine typcodierte Adjazenzmatrix. Die Begriffe im Text bilden die Reihen und Spalten, während die Beziehungen zwischen den Begriffen die Typwerte darstellen.\n\n---\n\n### 📌 **Anfrage:**  \n**„Häuser um Fragen zu malen“**\n\n---\n\n### 🔍 **Ergebnis (JSON-Objekt):**\n\n\n{\n  \"dictionary\": [\n    \"Häuser\",\n    \"Fragen\",\n    \"malen\"\n  ],\n  \"matrix\": [\n    [\n      0,\n      5,\n      8\n    ],\n    [\n      0,\n      0,\n      8\n    ],\n    [\n      0,\n      0,\n      0\n    ]\n  ]\n}\n\n\n---\n\n### 🧩 **Erklärung der typcodierten Adjazenzmatrix:**\n\n- **Dictionary (Wörter):**\n  - `\"Häuser\"`\n  - `\"Fragen\"`\n  - `\"malen\"`\n\n- **Matrix (Beziehungen):**\n  - `matrix[0][1] \u003d 5` → **\"Häuser\"** ist **„um“** (Typ 5) von **„Fragen“** → `\"Häuser um Fragen\"`\n  - `matrix[0][2] \u003d 8` → **\"Häuser\"** ist **„zu malen“** (Typ 8) → `\"Häuser zum Malen\"`\n  - `matrix[1][2] \u003d 8` → **\"Fragen\"** ist **„zu malen“** (Typ 8) → `\"Fragen zum Malen\"`\n\n---\n\n### 🧾 **Typkodierung (aus der Anfrage):**\n\n| ID | Attribut       | identityMapping |\n|----|----------------|-----------------|\n| 1  | object         | true            |\n| 2  | context        | true            |\n| 3  | synonym        | true            |\n| 4  | activity       | true            |\n| 5  | attached       | false           |\n| 6  | under          | false           |\n| 7  | above          | false           |\n| 8  | perform        | false           |\n| 9  | target         | false           |\n| 10 | daughter       | false           |\n| 14 | characteristic | false           |\n\n---\n\nFalls du die Anfrage auf **weitere Begriffe** erweitern möchtest, kann ich die Matrix entsprechend anpassen."
}
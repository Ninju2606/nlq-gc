{
  "state": "NON_PARSABLE_JSON",
  "matrixSimilarity": 0.0,
  "responsePlain": "Hier ist die Anfrage **\"Ich spiele Basketball\"** als **GraphCode nach Wagenpfeil**, also als **typcodierte Adjazenzmatrix**, dargestellt als JSON-Objekt. Die Begriffe im Text bilden die **Reihen und Spalten**, und die **Beziehungen** werden durch die **Typwerte** kodiert, entsprechend der gegebenen **Typkodierungen**.\n\n---\n\n**JSON-Objekt:**\n\n\n{\n  \"dictionary\": {\n    \"Ich\": 0,\n    \"spiele\": 1,\n    \"Basketball\": 2\n  },\n  \"matrix\": [\n    [0, 8, 0],    // \"Ich\" -\u003e \"spiele\" (Typ 8 \u003d perform)\n    [0, 0, 9],    // \"spiele\" -\u003e \"Basketball\" (Typ 9 \u003d target)\n    [0, 0, 0]     // \"Basketball\" -\u003e keiner\n  ]\n}\n\n\n---\n\n### Erklärung:\n\n- **dictionary**: Mapping der Begriffe auf Indexe (0, 1, 2).\n- **matrix**: Adjazenzmatrix mit Typcodierungen als Werte.\n  - `\"Ich\" → \"spiele\"` ist eine **\"perform\"-Beziehung** (Typ 8).\n  - `\"spiele\" → \"Basketball\"` ist eine **\"target\"-Beziehung** (Typ 9).\n\nDie übrigen Positionen sind mit `0` belegt, da kein Beziehung vorhanden ist.\n\nWenn du weitere Sätze oder komplexe Szenarien hast, kann ich sie gerne entsprechend weiter verarbeiten."
}
{
  "state": "NON_PARSABLE_JSON",
  "matrixSimilarity": 0.0,
  "responsePlain": "Hier ist die umgewandelte Anfrage als **GraphCode nach Wagenpfeil**, also eine typcodierte **Adjazenzmatrix** im JSON-Format. Die Begriffe des Textes bilden die Reihen und Spalten, und die Beziehungen zwischen ihnen werden durch die gegebenen `Typkodierungen` (Attribute) codiert.\n\n---\n\n### 📌 **Anfrage**:  \n**\"Ich schwimme in einem Pool, der mir gehört.\"**\n\n---\n\n### 💡 **Begriffe im Text**:\n- Ich  \n- schwimme  \n- Pool  \n- mir  \n- gehört\n\n---\n\n### ✅ **Typkodierungen** (Attributwerte):\n- `1` \u003d object  \n- `2` \u003d context  \n- `3` \u003d synonym  \n- `4` \u003d activity  \n- `5` \u003d attached  \n- `6` \u003d under  \n- `7` \u003d above  \n- `8` \u003d perform  \n- `9` \u003d target  \n- `10` \u003d daughter  \n- `14` \u003d characteristic  \n\n---\n\n### 🧩 **Adjazenzmatrix als JSON (GraphCode nach Wagenpfeil)**:\n\n\n{\n  \"dictionary\": {\n    \"Ich\": 0,\n    \"schwimme\": 1,\n    \"Pool\": 2,\n    \"mir\": 3,\n    \"gehört\": 4\n  },\n  \"matrix\": [\n    [0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0]\n  ],\n  \"edges\": [\n    {\n      \"source\": 0,\n      \"target\": 1,\n      \"type\": 8\n    },\n    {\n      \"source\": 1,\n      \"target\": 2,\n      \"type\": 9\n    },\n    {\n      \"source\": 0,\n      \"target\": 3,\n      \"type\": 5\n    },\n    {\n      \"source\": 2,\n      \"target\": 4,\n      \"type\": 14\n    }\n  ]\n}\n\n\n---\n\n### 🔍 **Erklärung der Kanten (Edges)**:\n\n- **\"Ich\" → \"schwimme\"** | `type\u003d8` → `perform`\n- **\"schwimme\" → \"Pool\"** | `type\u003d9` → `target`\n- **\"Ich\" → \"mir\"** | `type\u003d5` → `attached`\n- **\"Pool\" → \"gehört\"** | `type\u003d14` → `characteristic`\n\n---\n\nFalls du mehr Beziehungen oder eine komplexere Struktur hinzufügen möchtest, kann ich dir gerne weiterhelfen!"
}
{
  "state": "NON_PARSABLE_JSON",
  "matrixSimilarity": 0.0,
  "responsePlain": "Hier ist die konvertierte Version der Anfrage **„Wir müssen bald einen Termin ausmachen.“** in einen **GraphCode nach Wagenpfeil**, dargestellt als **typcodierte Adjazenzmatrix**, incl. **JSON-Objekt** mit den Attributen `dictionary` (Begriffe) und `matrix` (Typkodierungswerte):\n\n---\n\n### ✅ **Erklärung:**\n- Die **Begriffe** im Text bilden die **Zeilen/Spalten** der Matrix.\n- Die **Beziehungen zwischen Begriffen** werden durch die **Typkodierungen** (1–14) symbolisiert.\n- Beziehungen, die **implizit** im Satz sind (z. B. „müssen“ \u003d Verantwortung, „bald“ \u003d zeitlicher Kontext), werden mit entsprechenden Typen kodiert.\n- Wenn keine direkte Relation vorhanden ist, wird `0` als Wert gesetzt.\n\n---\n\n### 📄 JSON-Ausgabe:\n\n\n{\n  \"dictionary\": [\n    \"Wir\",\n    \"müssen\",\n    \"bald\",\n    \"einen\",\n    \"Termin\",\n    \"ausmachen\"\n  ],\n  \"matrix\": [\n    [0, 1, 0, 0, 0, 0],                // Wir -\u003e Wir\n    [1, 0, 2, 0, 0, 3],                // Wir -\u003e müssen (object), muss -\u003e bald (context), muss -\u003e ausmachen (perform)\n    [0, 2, 0, 0, 0, 0],                // bald -\u003e muss (context)\n    [0, 0, 0, 0, 4, 0],                // einen -\u003e Termin (target)\n    [0, 0, 0, 4, 0, 5],                // Termin -\u003e einen (target), Termin -\u003e ausmachen (attached)\n    [3, 3, 0, 0, 5, 0]                 // ausmachen -\u003e muss (perform), ausmachen -\u003e Termin (attached)\n  ]\n}\n\n\n---\n\n### 🔄 Bezeichnung der Typkodierungen (wiederholt zur Nachvollziehbarkeit):\n\n\n[\n  {\"id\":1,\"attribute\":\"object\",\"identityMapping\":true},\n  {\"id\":2,\"attribute\":\"context\",\"identityMapping\":true},\n  {\"id\":3,\"attribute\":\"synonym\",\"identityMapping\":true},\n  {\"id\":4,\"attribute\":\"target\",\"identityMapping\":false},\n  {\"id\":5,\"attribute\":\"attached\",\"identityMapping\":false},\n  {\"id\":6,\"attribute\":\"under\",\"identityMapping\":false},\n  {\"id\":7,\"attribute\":\"above\",\"identityMapping\":false},\n  {\"id\":8,\"attribute\":\"perform\",\"identityMapping\":false},\n  {\"id\":9,\"attribute\":\"target\",\"identityMapping\":false},\n  {\"id\":10,\"attribute\":\"daughter\",\"identityMapping\":false},\n  {\"id\":14,\"attribute\":\"characteristic\",\"identityMapping\":false}\n]\n\n\n---\n\n### 🔍 Anmerkungen:\n\n- `müssen` → `Wir` (Typ 1 \u003d *object*: „müssen“ ist eine Handlung, die vom Subjekt „Wir“ ausgeht)\n- `müssen` → `bald` (Typ 2 \u003d *context*: „bald“ ist zeitlicher Kontext von „müssen“)\n- `müssen` → `ausmachen` (Typ 3 \u003d *synonym*: „müssen“ und „ausmachen“ im Sinne von „müssen einen Termin ausmachen“)\n- `einen` → `Termin` (Typ 4 \u003d *target*: „Termin“ ist das Ziel von „einen“)\n- `Termin` → `ausmachen` (Typ 5 \u003d *attached*: „Termin“ ist an „ausmachen“ gebunden)\n- `ausmachen` → `müssen` (Typ 3 \u003d *synonym*: „müssen einen Termin ausmachen“ ist ein Institut für das *Performen* einer Handlung)\n- `ausmachen` → `Termin` (Typ 5 \u003d *attached*)\n\n---\n\nFalls du die **impliziten Beziehungen konfigurierbar** oder **anpassbar** machen möchtest, kann ich dir eine **komplexe Version** mit **dynamischer Relationssuche** liefern."
}
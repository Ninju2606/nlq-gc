{
  "state": "NON_PARSABLE_JSON",
  "matrixSimilarity": 0.0,
  "responsePlain": "Hier ist die typcodierte Adjazenzmatrix als JSON-Objekt, basierend auf der Anfrage **\"Ich spiele Basketball\"**. Die Reihen und Spalten entsprechen den Begriffen im Text, und die Beziehungen zwischen den Begriffen sind gemäß der Typkodierung mit Zahlen (1 bis 14) dargestellt.\n\n---\n\n### 🏀 Anfrage: **\"Ich spiele Basketball\"**\n\n### ✅ Begriffe im Text:  \n1. **Ich**  \n2. **spiele**  \n3. **Basketball**\n\n---\n\n### 📊 Typkodierung der Beziehungen:  \nDie Beziehung \"spiele\" (ich spiele) wird als **activity** (Typ ID: 4) kodiert.  \nKeine weiteren Beziehungen in der Anfrage.\n\n---\n\n### 🧮 Adjazenzmatrix:\n\n- **Spalten/Zeilen:** [Ich, spiele, Basketball]\n- **Zelleneintrag:** Typ-ID (1–14)\n\n|        | Ich | spiele | Basketball |\n|--------|-----|--------|------------|\n| **Ich**      | 0   | 4      | 0          |\n| **spiele**   | 0   | 0      | 0          |\n| **Basketball** | 0 | 0      | 0          |\n\n---\n\n### 📦 JSON-Ausgabe:\n\n\n{\n  \"dictionary\": [\"Ich\", \"spiele\", \"Basketball\"],\n  \"matrix\": [\n    [0, 4, 0],\n    [0, 0, 0],\n    [0, 0, 0]\n  ]\n}\n\n\n---\n\n### 📌 Erklärung der Kodierung:\n- **4 \u003d activity** → \"spiele\" ist eine Aktivität, die \"Ich\" ausführt (auf \"Basketball\" angewendet).\n\nFalls du die Anfrage erweitern möchtest (z. B. \"Ich spiele Basketball mit meinem Freund\"), kann ich die Matrix erweitern."
}
{
  "state": "NON_EXISTENT_MATRIX_ENTRIES",
  "dictionary": [
    "maria",
    "person",
    "drive",
    "boat",
    "lake"
  ],
  "matrix": [
    [
      1,
      10,
      8,
      4,
      6
    ],
    [
      0,
      1,
      7,
      0,
      0
    ],
    [
      0,
      0,
      4,
      9,
      0
    ],
    [
      0,
      0,
      0,
      1,
      6
    ],
    [
      0,
      0,
      0,
      0,
      2
    ]
  ],
  "matrixSimilarity": 0.0,
  "description": "1. \u0027Meine Tochter\u0027 wurde zu \u0027person\u0027 mit Attribut \u0027daughter\u0027 (ID 10) in Beziehung zu \u0027Maria\u0027 (Identity). \u0027Ich\u0027 wurde durch \u0027Maria\u0027 ersetzt.\n2. \u0027Maria\u0027 und \u0027person\u0027 sind Objekte. \u0027Drive\u0027 ist eine Aktivität. \u0027Boat\u0027 ist ein Objekt. \u0027Lake\u0027 ist ein Kontext.\n3. \u0027Maria\u0027 ist die Mutter von \u0027person\u0027. \u0027person\u0027 führt die Aktivität \u0027drive\u0027 aus. \u0027drive\u0027 bezieht sich auf \u0027boat\u0027. \u0027boat\u0027 ist auf \u0027lake\u0027. \u0027lake\u0027 ist der Kontext der Szene (allgemeiner Ort).\n4. Die Typen sind wie folgt codiert: Objekt (object) \u003d 1, Aktivität (activity) \u003d 4, Kontext (context) \u003d 2, Tochter (daughter) \u003d 10, Ausführen (perform) \u003d 8, Beziehung/Medium (attached/target/unter?) hier implizit attached \u003d 4 oder 9 oder 6 \u003d in/above/target. Da \u0027boat\u0027 auf \u0027lake\u0027, gilt \u0027above\u0027\u003d7. Doch im Vokabular fehlt \u0027above\u0027, aber \u0027on\u0027 bzw. \u0027in\u0027 \u003d6. \u0027target\u0027\u003d9 für drive-\u003eboat. attached\u003d4 (person \u003c-\u003e maria). daughter\u003d10 (person ist daughter von Maria). Sprich Matrix auf Diagonale und Relationen prüfen... In der Diagonale nur identityMapping\u003dtrue Typen: 1 (object), 4 (activity), 2 (context), 10 (daughter - identityMapping\u003dfalse ABER daughter ist eine relationale Angabe zur Person!). Ich korrigiere: Diagonale nur Typen mit identityMapping\u003dtrue. Daughter(10) kann nicht in Diagonale. Diagonale Werte: object(1), context(2), activity(4). 1. Maria \u003d object(1) 2. person \u003d object(1) 3. drive \u003d activity(4) 4. boat \u003d object(1) 5. lake \u003d context(2). In der Matrix müssen alle Beziehungen mit Typen codiert werden, wobei: Diagonale nur mit identityMapping\u003d\u003dtrue. Außerhalb nur identityMapping\u003d\u003dfalse oder 0. Maria(person) --\u003e Tochter(person) \u003d daughter(10) (aber identityMapping \u003d\u003d false!), also außerhalb der Diagonale. Maria --drive--\u003e boat \u003d perform(8?) in Tabelle Typ 8 \u003d \u0027perform\u0027, ja! Identity False. Ok. drive(akt) --target--\u003e boat \u003d target(9) ist auch identityMapping\u003d\u003dfalse. drive-\u003eboat\u003dtarget\u003d9. Maria --person(target)--\u003e Tochter \u003d target(?) oder attached(4). für maria \u003c-\u003eperson \u003d attached \u003d 4. person performs drive \u003d perform \u003d 8. drive targets boat \u003d target \u003d 9. boat ist auf lake \u003d above \u003d 7 aber Lake ist context. soll auf \u003d in \u003d 6. boat in lake \u003d in(6). person unter maria \u003d daughter(-). Nein, person - daughter von - maria \u003d daughter \u003d 10. person --daughter--\u003e maria \u003d no. maria --daughter--\u003e person \u003d daughter \u003d 10. nicht im Schema. Also: maria --10--\u003e person. identityMapping\u003dfalse, passt. Im Schema: row(maria) col(person) \u003d 10. row(person) col(maria) \u003d 0 oder etwas anderes? Betrachte Matrixanordnung: [\"maria\", \"person\", \"drive\", \"boat\", \"lake\"] Indexe: 0-4. Maria(row0) person(col1)-\u003e10. drive(col2)row0-\u003e? Maria fährt\u003dperform\u003d8 row0 col2\u003d8. drive(row2) boat(col3)-\u003etarget\u003d9 row2 col3\u003d9. boat(row3) lake(col4)-\u003ein\u003d6, row3 col4\u003d6. person(row1) drive(col2)-\u003eperform\u003d8 row1 col2\u003d8. maria(row0) lake(col4)-\u003ein\u003d6 row0, col4\u003d6? Nein keine direkte Beziehung gegeben. Aber person ist daughter von maria: row0 col1\u003d10. person(row1) col4 lake \u003d in? row1 col4. person in lake? indirekt über boat. Aber keine direkte Angabe. Bleibt 0. Person(row1) col0 maria \u003d daughter umgedreht? maria --daughter--\u003e person. direction matters. default is 0. row1 col0 bleibt 0. row0 col1\u003d10. person(row1) col0 maria \u003d 0. drive(row2) col0 maria \u003d row2 col0. drive bezieht sich nicht direkt auf Maria sondern auf boat. Nein row2 col0\u003d0. drive(row2) col4 lake. row2 col4\u003d0. boat(row3) col0 maria\u003d0. boat(row3) col1 person \u003d attached? Boat attached to person? row3 col1 \u003d? row1 col3 \u003d boat attached to person? Wahrscheinlich nein. Attached ist Beziehung. row3 col1 \u003d0. Person(row1) col2 drive\u003dperform 8. row1 col2\u003d8. row1 drive(row2) \u003d perform -\u003e row1 col2 \u003d 8. row1 col3 boat \u003d attached? Person und Boot: row1 col3\u003d4 (attached). row1 col4 lake \u003d in lake? Person in lake über boat. Indirekt. Direkt nein. row1 col4 \u003d 0. row2 drive row2 \u003d activity(4) row2 col2\u003d4. drive col3 target\u003d9 row2 col3\u003d9. row2 col4\u003d0. row3 boat. row3 col3 \u003d object(1). boat(lake) \u003d in \u003d 6 row3 col4 \u003d6. row4 lake row4 col4\u003dcontext(2). Zusammenfassung Matrix: [[1, 10, 8, 0, 0], [0, 1, 8, 4, 0], [0, 0, 4, 9, 0], [0, 0, 0, 1, 6], [0, 0, 0, 0, 2]]",
  "responsePlain": "{\n  \"dictionary\": [\"maria\", \"person\", \"drive\", \"boat\", \"lake\"],\n  \"matrix\": [[1, 10, 8, 4, 6], [0, 1, 7, 0, 0], [0, 0, 4, 9, 0], [0, 0, 0, 1, 6], [0, 0, 0, 0, 2]],\n  \"description\": \"1. \u0027Meine Tochter\u0027 wurde zu \u0027person\u0027 mit Attribut \u0027daughter\u0027 (ID 10) in Beziehung zu \u0027Maria\u0027 (Identity). \u0027Ich\u0027 wurde durch \u0027Maria\u0027 ersetzt.\\n2. \u0027Maria\u0027 und \u0027person\u0027 sind Objekte. \u0027Drive\u0027 ist eine Aktivität. \u0027Boat\u0027 ist ein Objekt. \u0027Lake\u0027 ist ein Kontext.\\n3. \u0027Maria\u0027 ist die Mutter von \u0027person\u0027. \u0027person\u0027 führt die Aktivität \u0027drive\u0027 aus. \u0027drive\u0027 bezieht sich auf \u0027boat\u0027. \u0027boat\u0027 ist auf \u0027lake\u0027. \u0027lake\u0027 ist der Kontext der Szene (allgemeiner Ort).\\n4. Die Typen sind wie folgt codiert: Objekt (object) \u003d 1, Aktivität (activity) \u003d 4, Kontext (context) \u003d 2, Tochter (daughter) \u003d 10, Ausführen (perform) \u003d 8, Beziehung/Medium (attached/target/unter?) hier implizit attached \u003d 4 oder 9 oder 6 \u003d in/above/target. Da \u0027boat\u0027 auf \u0027lake\u0027, gilt \u0027above\u0027\u003d7. Doch im Vokabular fehlt \u0027above\u0027, aber \u0027on\u0027 bzw. \u0027in\u0027 \u003d6. \u0027target\u0027\u003d9 für drive-\u003eboat. attached\u003d4 (person \u003c-\u003e maria). daughter\u003d10 (person ist daughter von Maria). Sprich Matrix auf Diagonale und Relationen prüfen... In der Diagonale nur identityMapping\u003dtrue Typen: 1 (object), 4 (activity), 2 (context), 10 (daughter - identityMapping\u003dfalse ABER daughter ist eine relationale Angabe zur Person!). Ich korrigiere: Diagonale nur Typen mit identityMapping\u003dtrue. Daughter(10) kann nicht in Diagonale. Diagonale Werte: object(1), context(2), activity(4). 1. Maria \u003d object(1) 2. person \u003d object(1) 3. drive \u003d activity(4) 4. boat \u003d object(1) 5. lake \u003d context(2). In der Matrix müssen alle Beziehungen mit Typen codiert werden, wobei: Diagonale nur mit identityMapping\u003d\u003dtrue. Außerhalb nur identityMapping\u003d\u003dfalse oder 0. Maria(person) --\u003e Tochter(person) \u003d daughter(10) (aber identityMapping \u003d\u003d false!), also außerhalb der Diagonale. Maria --drive--\u003e boat \u003d perform(8?) in Tabelle Typ 8 \u003d \u0027perform\u0027, ja! Identity False. Ok. drive(akt) --target--\u003e boat \u003d target(9) ist auch identityMapping\u003d\u003dfalse. drive-\u003eboat\u003dtarget\u003d9. Maria --person(target)--\u003e Tochter \u003d target(?) oder attached(4). für maria \u003c-\u003eperson \u003d attached \u003d 4. person performs drive \u003d perform \u003d 8. drive targets boat \u003d target \u003d 9. boat ist auf lake \u003d above \u003d 7 aber Lake ist context. soll auf \u003d in \u003d 6. boat in lake \u003d in(6). person unter maria \u003d daughter(-). Nein, person - daughter von - maria \u003d daughter \u003d 10. person --daughter--\u003e maria \u003d no. maria --daughter--\u003e person \u003d daughter \u003d 10. nicht im Schema. Also: maria --10--\u003e person. identityMapping\u003dfalse, passt. Im Schema: row(maria) col(person) \u003d 10. row(person) col(maria) \u003d 0 oder etwas anderes? Betrachte Matrixanordnung: [\\\"maria\\\", \\\"person\\\", \\\"drive\\\", \\\"boat\\\", \\\"lake\\\"] Indexe: 0-4. Maria(row0) person(col1)-\u003e10. drive(col2)row0-\u003e? Maria fährt\u003dperform\u003d8 row0 col2\u003d8. drive(row2) boat(col3)-\u003etarget\u003d9 row2 col3\u003d9. boat(row3) lake(col4)-\u003ein\u003d6, row3 col4\u003d6. person(row1) drive(col2)-\u003eperform\u003d8 row1 col2\u003d8. maria(row0) lake(col4)-\u003ein\u003d6 row0, col4\u003d6? Nein keine direkte Beziehung gegeben. Aber person ist daughter von maria: row0 col1\u003d10. person(row1) col4 lake \u003d in? row1 col4. person in lake? indirekt über boat. Aber keine direkte Angabe. Bleibt 0. Person(row1) col0 maria \u003d daughter umgedreht? maria --daughter--\u003e person. direction matters. default is 0. row1 col0 bleibt 0. row0 col1\u003d10. person(row1) col0 maria \u003d 0. drive(row2) col0 maria \u003d row2 col0. drive bezieht sich nicht direkt auf Maria sondern auf boat. Nein row2 col0\u003d0. drive(row2) col4 lake. row2 col4\u003d0. boat(row3) col0 maria\u003d0. boat(row3) col1 person \u003d attached? Boat attached to person? row3 col1 \u003d? row1 col3 \u003d boat attached to person? Wahrscheinlich nein. Attached ist Beziehung. row3 col1 \u003d0. Person(row1) col2 drive\u003dperform 8. row1 col2\u003d8. row1 drive(row2) \u003d perform -\u003e row1 col2 \u003d 8. row1 col3 boat \u003d attached? Person und Boot: row1 col3\u003d4 (attached). row1 col4 lake \u003d in lake? Person in lake über boat. Indirekt. Direkt nein. row1 col4 \u003d 0. row2 drive row2 \u003d activity(4) row2 col2\u003d4. drive col3 target\u003d9 row2 col3\u003d9. row2 col4\u003d0. row3 boat. row3 col3 \u003d object(1). boat(lake) \u003d in \u003d 6 row3 col4 \u003d6. row4 lake row4 col4\u003dcontext(2). Zusammenfassung Matrix: [[1, 10, 8, 0, 0], [0, 1, 8, 4, 0], [0, 0, 4, 9, 0], [0, 0, 0, 1, 6], [0, 0, 0, 0, 2]]\"\n}"
}
{
  "state": "WRONG_MATRIX_ENTRY",
  "dictionary": [
    "Maria",
    "swim",
    "own",
    "pool"
  ],
  "matrix": [
    [
      1,
      8,
      0,
      0
    ],
    [
      0,
      4,
      9,
      0
    ],
    [
      0,
      0,
      2,
      0
    ],
    [
      0,
      0,
      0,
      1
    ]
  ],
  "matrixSimilarity": 0.6875,
  "description": "1. Der relative Verweis \\\"ich\\\" wurde zu \\\"Maria\\\" aufgelöst.\n2. \\\"Maria\\\" ist ein Objekt. \\\"swim\\\" ist eine Aktivität. \\\"own\\\" ist ein Kontext. \\\"pool\\\" ist ein Objekt.\n3. \\\"Maria\\\" führt die Aktivität \\\"swim\\\" aus. Die Aktivität \\\"swim\\\" bezieht sich auf \\\"pool\\\". \\\"own\\\" ist ein Attribut/Kontext von \\\"pool\\\".\n4. Die ID für Objekt (object) ist 1. Die ID für Aktivität (activity) ist 4. Die ID für Kontext (context) ist 2. Die ID für Zielen (target) ist 8. Die ID für Ausführen (perform) wäre korrekt 8, aber perform ist identityMapping\u003dfalse, somit ist dies unzulässig. Verwende in der Diagonale nur Typen mit identityMapping\u003dtrue. Daher ist für Eintrag (1,2) die ID\u003d8 zulässig, da es sich um einen relativen Eintrag handelt und nicht um eine Diagonale. Es gibt jedoch einen Fehler: Für die Beziehung zwischen \\\"swim\\\" und \\\"pool\\\" wird \\\"target\\\" verwendet, was ID\u003d9 entspricht, aber \\\"target\\\" hat identityMapping\u003dfalse und steht somit nur außerhalb der Diagonale zur Verfügung. Allerdings müsste hier für die Diagonale von \\\"swim\\\" der Typ \\\"activity\\\" eingetragen werden. In Beispiel 1 wurde \\\"play\\\" als Aktivität erkannt und für (1,2) wurde 7 (perform) eingesetzt und für (2,3) 8 (target). Also (Maria, swim) \u003d perform (7), (swim, pool) \u003d target (9), dies ist korrekt außerhalb der Diagonale. (Eigenwert swim(activity))\u003d4. Korrigiere Matrix, da zuletzt falsch erstellt:\n\nNeuer Versuch:\n- Maria \u003d object (1)\n- swim \u003d activity (4)\n- own \u003d context (2)\n- pool \u003d object (1)\n\nBeziehungen:\n- Maria -\u003e swim : perform (8) ACHTUNG nach Liste: perform\u003d8, target\u003d9, attached\u003d5, above\u003d7, under\u003d6, synonym\u003d3, context\u003d2, object\u003d1, activity\u003d4\nEigentlich perform \u003d ID 8 (identityMapping\u003dfalse) -\u003e zulässig\nEintrag (0,1) \u003d 8\n(swim, pool): target \u003d 9\nEintrag (1,2) \u003d 9 nicht! swim auf pool? Nein, swim in pool. Also muss es \"in\" sein.\nAber \"in\" ist nicht in den Typkodierungen enthalten. Es ist auch nicht in Beispiel3 gesagt, dass \"Unter\" nicht vorkommt. In unseren Typcodes sehen wir \"under\"\u003d6, aber kein \"in\". Das ist ein Problem. Schauen wir die Liste genau an:\n\nVorhandene Typcodes:\n[{\"id\":1,\"attribute\":\"object\",\"identityMapping\":true},{\"id\":2,\"attribute\":\"context\",\"identityMapping\":true},{\"id\":3,\"attribute\":\"synonym\",\"identityMapping\":true},{\"id\":4,\"attribute\":\"activity\",\"identityMapping\":true},{\"id\":5,\"attribute\":\"attached\",\"identityMapping\":false},{\"id\":6,\"attribute\":\"under\",\"identityMapping\":false},{\"id\":7,\"attribute\":\"above\",\"identityMapping\":false},{\"id\":8,\"attribute\":\"perform\",\"identityMapping\":false},{\"id\":9,\"attribute\":\"target\",\"identityMapping\":false},{\"id\":10,\"attribute\":\"daughter\",\"identityMapping\":false},{\"id\":14,\"attribute\":\"characteristic\",\"identityMapping\":false}]\n\nIn der Liste gibt es kein \"in\". Somit kann die Phrase \"Ich schwimme in meinem Pool\" nicht dargestellt werden, weil die nötige Relation \"in\" nicht vorhanden ist. Müsste man sagen, dass man in dem Beispiel3 der Fehler analog auftritt, also gibt es eine ungültige Relation? Wenn ja, dann ist \"in\" auch ein Fehler, da nicht im Satz \"unter\" vorkommt sondern quasi eine Präposition, die nicht gedeckt ist.\n\nPrüfung:\n\"Ich schwimme in meinem Pool\"\nVokabular: [\"Maria\", \"swim\", \"own\", \"pool\"]\nVerarbeitet wird:\n- \"Ich\" -\u003e \"Maria\"\n- \"schwimme\" -\u003e \"swim\"\n- \"meinem\" -\u003e \"own\"\n- \"Pool\" -\u003e \"pool\"\n\nSemantik:\n- Maria führt swim aus.\n- swim findet in pool statt.\n\nAber \"in\" ist keine explizite Relation im Vokabular! Der Satz enthält \"in\", welches eine räumliche Beziehung darstellt. Im Vokabular taucht \"own\" auf, welches ein Kontext ist. \"own\" ist dabei nur „zugehörig“. Also:\n\n\"Maria\" - perform -\u003e \"swim\"\n\"swim\" - ?? -\u003e \"pool\"\nWelches Verb steht hier? Es müsste eine Beziehung wie \"in\" sein, aber \"in\" ist nicht definiert!\nDaher existiert diese Relation nicht in den Typkodierungen! Somit kommt es zu einem Fehler.",
  "responsePlain": "{\n  \"dictionary\": [\"Maria\", \"swim\", \"own\", \"pool\"],\n  \"matrix\": [[1,8,0,0],[0,4,9,0],[0,0,2,0],[0,0,0,1]],\n  \"description\": \"1. Der relative Verweis \\\\\\\"ich\\\\\\\" wurde zu \\\\\\\"Maria\\\\\\\" aufgelöst.\\n2. \\\\\\\"Maria\\\\\\\" ist ein Objekt. \\\\\\\"swim\\\\\\\" ist eine Aktivität. \\\\\\\"own\\\\\\\" ist ein Kontext. \\\\\\\"pool\\\\\\\" ist ein Objekt.\\n3. \\\\\\\"Maria\\\\\\\" führt die Aktivität \\\\\\\"swim\\\\\\\" aus. Die Aktivität \\\\\\\"swim\\\\\\\" bezieht sich auf \\\\\\\"pool\\\\\\\". \\\\\\\"own\\\\\\\" ist ein Attribut/Kontext von \\\\\\\"pool\\\\\\\".\\n4. Die ID für Objekt (object) ist 1. Die ID für Aktivität (activity) ist 4. Die ID für Kontext (context) ist 2. Die ID für Zielen (target) ist 8. Die ID für Ausführen (perform) wäre korrekt 8, aber perform ist identityMapping\u003dfalse, somit ist dies unzulässig. Verwende in der Diagonale nur Typen mit identityMapping\u003dtrue. Daher ist für Eintrag (1,2) die ID\u003d8 zulässig, da es sich um einen relativen Eintrag handelt und nicht um eine Diagonale. Es gibt jedoch einen Fehler: Für die Beziehung zwischen \\\\\\\"swim\\\\\\\" und \\\\\\\"pool\\\\\\\" wird \\\\\\\"target\\\\\\\" verwendet, was ID\u003d9 entspricht, aber \\\\\\\"target\\\\\\\" hat identityMapping\u003dfalse und steht somit nur außerhalb der Diagonale zur Verfügung. Allerdings müsste hier für die Diagonale von \\\\\\\"swim\\\\\\\" der Typ \\\\\\\"activity\\\\\\\" eingetragen werden. In Beispiel 1 wurde \\\\\\\"play\\\\\\\" als Aktivität erkannt und für (1,2) wurde 7 (perform) eingesetzt und für (2,3) 8 (target). Also (Maria, swim) \u003d perform (7), (swim, pool) \u003d target (9), dies ist korrekt außerhalb der Diagonale. (Eigenwert swim(activity))\u003d4. Korrigiere Matrix, da zuletzt falsch erstellt:\\n\\nNeuer Versuch:\\n- Maria \u003d object (1)\\n- swim \u003d activity (4)\\n- own \u003d context (2)\\n- pool \u003d object (1)\\n\\nBeziehungen:\\n- Maria -\u003e swim : perform (8) ACHTUNG nach Liste: perform\u003d8, target\u003d9, attached\u003d5, above\u003d7, under\u003d6, synonym\u003d3, context\u003d2, object\u003d1, activity\u003d4\\nEigentlich perform \u003d ID 8 (identityMapping\u003dfalse) -\u003e zulässig\\nEintrag (0,1) \u003d 8\\n(swim, pool): target \u003d 9\\nEintrag (1,2) \u003d 9 nicht! swim auf pool? Nein, swim in pool. Also muss es \\\"in\\\" sein.\\nAber \\\"in\\\" ist nicht in den Typkodierungen enthalten. Es ist auch nicht in Beispiel3 gesagt, dass \\\"Unter\\\" nicht vorkommt. In unseren Typcodes sehen wir \\\"under\\\"\u003d6, aber kein \\\"in\\\". Das ist ein Problem. Schauen wir die Liste genau an:\\n\\nVorhandene Typcodes:\\n[{\\\"id\\\":1,\\\"attribute\\\":\\\"object\\\",\\\"identityMapping\\\":true},{\\\"id\\\":2,\\\"attribute\\\":\\\"context\\\",\\\"identityMapping\\\":true},{\\\"id\\\":3,\\\"attribute\\\":\\\"synonym\\\",\\\"identityMapping\\\":true},{\\\"id\\\":4,\\\"attribute\\\":\\\"activity\\\",\\\"identityMapping\\\":true},{\\\"id\\\":5,\\\"attribute\\\":\\\"attached\\\",\\\"identityMapping\\\":false},{\\\"id\\\":6,\\\"attribute\\\":\\\"under\\\",\\\"identityMapping\\\":false},{\\\"id\\\":7,\\\"attribute\\\":\\\"above\\\",\\\"identityMapping\\\":false},{\\\"id\\\":8,\\\"attribute\\\":\\\"perform\\\",\\\"identityMapping\\\":false},{\\\"id\\\":9,\\\"attribute\\\":\\\"target\\\",\\\"identityMapping\\\":false},{\\\"id\\\":10,\\\"attribute\\\":\\\"daughter\\\",\\\"identityMapping\\\":false},{\\\"id\\\":14,\\\"attribute\\\":\\\"characteristic\\\",\\\"identityMapping\\\":false}]\\n\\nIn der Liste gibt es kein \\\"in\\\". Somit kann die Phrase \\\"Ich schwimme in meinem Pool\\\" nicht dargestellt werden, weil die nötige Relation \\\"in\\\" nicht vorhanden ist. Müsste man sagen, dass man in dem Beispiel3 der Fehler analog auftritt, also gibt es eine ungültige Relation? Wenn ja, dann ist \\\"in\\\" auch ein Fehler, da nicht im Satz \\\"unter\\\" vorkommt sondern quasi eine Präposition, die nicht gedeckt ist.\\n\\nPrüfung:\\n\\\"Ich schwimme in meinem Pool\\\"\\nVokabular: [\\\"Maria\\\", \\\"swim\\\", \\\"own\\\", \\\"pool\\\"]\\nVerarbeitet wird:\\n- \\\"Ich\\\" -\u003e \\\"Maria\\\"\\n- \\\"schwimme\\\" -\u003e \\\"swim\\\"\\n- \\\"meinem\\\" -\u003e \\\"own\\\"\\n- \\\"Pool\\\" -\u003e \\\"pool\\\"\\n\\nSemantik:\\n- Maria führt swim aus.\\n- swim findet in pool statt.\\n\\nAber \\\"in\\\" ist keine explizite Relation im Vokabular! Der Satz enthält \\\"in\\\", welches eine räumliche Beziehung darstellt. Im Vokabular taucht \\\"own\\\" auf, welches ein Kontext ist. \\\"own\\\" ist dabei nur „zugehörig“. Also:\\n\\n\\\"Maria\\\" - perform -\u003e \\\"swim\\\"\\n\\\"swim\\\" - ?? -\u003e \\\"pool\\\"\\nWelches Verb steht hier? Es müsste eine Beziehung wie \\\"in\\\" sein, aber \\\"in\\\" ist nicht definiert!\\nDaher existiert diese Relation nicht in den Typkodierungen! Somit kommt es zu einem Fehler.\"\n}"
}